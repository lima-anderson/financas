package com.lima.financas.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.lima.financas.exceptions.RegraNegocioException;
import com.lima.financas.models.Lancamento;
import com.lima.financas.models.Usuario;
import com.lima.financas.models.dtos.LancamentoDTO;
import com.lima.financas.models.enums.StatusLancamento;
import com.lima.financas.models.enums.TipoLancamento;
import com.lima.financas.services.LancamentoService;
import com.lima.financas.services.UsuarioService;

@RestController
@RequestMapping("/api/lancamentos")
public class LancamentoController {

	@Autowired
	private LancamentoService lancamentoService;

	@Autowired
	private UsuarioService usuarioService;

	@PostMapping
	public ResponseEntity salvar(@RequestBody LancamentoDTO dto) {
		try {
			Lancamento lancamento = converter(dto);
			lancamentoService.salvar(lancamento);
			return new ResponseEntity(lancamento, HttpStatus.CREATED);
		} catch (RegraNegocioException e) {
			return ResponseEntity.badRequest().body(e.getMessage());
		}
	}

//	@PutMapping("{id}")
//	public ResponseEntity atualizar(@PathVariable("id") Long id, @RequestBody LancamentoDTO dto) {
//		return lancamentoService.buscarPorId(id).map(entity -> {
//			try {
//				Lancamento lancamento = converter(dto);
//				lancamento.setId(entity.getId());
//				lancamentoService.atualizar(lancamento);
//				return ResponseEntity.ok(lancamento);
//			} catch (RegraNegocioException e) {
//				return ResponseEntity.badRequest().body(e.getMessage());
//			}
//		}).orElseGet(() -> new ResponseEntity("Lancamento nÃ£o encontrado.", HttpStatus.BAD_REQUEST));
//	}

	@PutMapping("{id}")
	public ResponseEntity atualizar(@PathVariable("id") Long id, @RequestBody LancamentoDTO dto) {
		return lancamentoService.buscarPorId(id).map(entity -> {
			try {
				Lancamento lancamento = converter(dto);
				lancamento.setId(entity.getId());
				lancamentoService.atualizar(lancamento);
				return ResponseEntity.ok(lancamento);
			} catch (RegraNegocioException e) {
				return ResponseEntity.badRequest().body(e.getMessage());
			}
		})
	}

	private Lancamento converter(LancamentoDTO dto) {
		Lancamento lancamento = new Lancamento();
		lancamento.setId(dto.getId());
		lancamento.setDescricao(dto.getDescricao());
		lancamento.setMes(dto.getMes());
		lancamento.setAno(dto.getAno());
		lancamento.setValor(dto.getValor());

		Usuario usuario = usuarioService.buscarPorId(dto.getUsuario().getId());
		lancamento.setUsuario(usuario);
		lancamento.setTipo(TipoLancamento.valueOf(dto.getTipo().toString()));
		lancamento.setStatus(StatusLancamento.valueOf(dto.getStatus().toString()));
		return lancamento;
	}

}
